# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: ci-deploy

on:
  push:
    branches: [main]

jobs:
  build:
    name: deploy-filip-club-ui
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set Node.js 18.x
        uses: actions/setup-node@v3
        with:
          node-version: 18.x

      - name: Run install
        uses: borales/actions-yarn@v4
        with:
          cmd: install # will run `yarn install` command

      - name: Build production bundle
        uses: borales/actions-yarn@v4
        with:
          cmd: build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: eu-central-1

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: filip-club-ui
          IMAGE_TAG: ${{ github.sha }}
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
          docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

      - name: Deploy into EC2
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          SERVER_USER: ${{ secrets.SERVER_USER }}
          SERVER_ADDRESS: ${{ secrets.SERVER_ADDRESS }}
        run: |
          echo "$SSH_PRIVATE_KEY" > ssh_private_key && chmod 600 ssh_private_key
          ssh -i ssh_private_key -o "StrictHostKeyChecking no" $SERVER_USER@$SERVER_ADDRESS 'mkdir application'
          cat deploy.sh | ssh -i ssh_private_key -o "StrictHostKeyChecking no" $SERVER_USER@$SERVER_ADDRESS 'cat > ./application/deploy.sh'
          ssh -i ssh_private_key -o "StrictHostKeyChecking no" $SERVER_USER@$SERVER_ADDRESS 'bash -c "cd application && chmod -R 755 ./deploy.sh && ./deploy.sh && cd .. && rm -rf application"'
